code quality:
  stage: build
  image: python:3.10
  before_script:
    - git config --global user.email $GIT_EMAIL
    - git config --global user.name $GIT_NAME
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install --no-root
  script:
    - poetry run black .
    - poetry run mypy --ignore-missing-imports --exclude venv .
    - poetry run isort .
    - poetry run radon cc --ignore venv,tests .
    - git add .
    - git diff --quiet --exit-code --cached || git commit -m "Auto-format code [skip ci]"
    - git push origin $CI_COMMIT_REF_NAME

test execution:
  stage: test
  image: python:3.10
  before_script:
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install --no-root
  script:
    - poetry run pytest --cov

build and publish:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t ilsaffff/ci-cd:latest .
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker push ilsaffff/ci-cd:latest
