push to github:
  stage: build 
  variables:
    GIT_STRATEGY: clone
  image: 
    name: alpine/git:latest
    entrypoint: [""]
  script:
    - git clone --depth 20 $CI_REPOSITORY_URL
    - cd  cicd_python_cnn
    - git checkout $CI_COMMIT_REF_NAME
    - git remote set-url --add --push origin $GITHUB_REPOSITORY_URL
    - git push origin $CI_COMMIT_REF_NAME

code quality:
  stage: build
  image: python:3.10
  before_script:
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install --no-root
  script:
    - poetry run black --check .
    - poetry run isort --check-only .
    - poetry run mypy --ignore-missing-imports --exclude venv .
    - poetry run radon cc --ignore venv,tests .

test execution:
  stage: test
  image: python:3.10
  before_script:
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install --no-root
  script:
    - poetry run pytest --cov

build and publish to docker:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t ilsaffff/ci-cd:latest .
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker push ilsaffff/ci-cd:latest


