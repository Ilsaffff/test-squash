code quality:
  stage: build
  image: python:3.10
  before_script:
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install --no-root
  script:
    - poetry run black --check .
    - poetry run isort --check-only .
    - poetry run mypy --ignore-missing-imports --exclude venv .
    - poetry run radon cc --ignore venv,tests .

test execution:
  stage: test
  image: python:3.10
  before_script:
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install --no-root
  script:
    - poetry run pytest --cov

build and publish to docker:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t ilsaffff/ci-cd:latest .
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker push ilsaffff/ci-cd:latest

push to github:
  stage: push_to_github
  image: alpine/git
  script:
    - apk add --no-cache git
    - git config --global user.email $GIT_EMAIL
    - git config --global user.name $GIT_NAME
    - git remote add github $GITHUB_REPO
    - git push github $CI_COMMIT_REF_NAME
  environment:
    name: production
